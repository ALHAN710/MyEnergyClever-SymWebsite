{% extends 'home1.html.twig' %}

{% block stylesheets %}
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.css" integrity="sha256-aa0xaJgmK/X74WM224KMQeNQC2xYKwlAt08oZqjeF0E=" crossorigin="anonymous" />

    <style>
        
        .x_panel{
            background-color: rgba(250,249,245,0.4);
        }    

        /* * {box-sizing: border-box;}*/

        /* Button used to open the chat form - fixed at the bottom of the page */
        .open-button {
            background-color: #555;
            color: white;
            padding: 16px 20px;
            border: none;
            cursor: pointer;
            opacity: 0.8;
            position: fixed;
            bottom: 23px;
            right: 28px;
            width: 280px;
        }

        /* The popup chat - hidden by default */
        .chat-popup {
            display: none;
            position: fixed;
            bottom: 0;
            right: 15px;
            border: 3px solid rgba(183, 179, 177, 0.3);/*#f1f1f1;*/
            z-index: 9;
        }

        /* Add styles to the form container */
        .form-container {
            max-width: 300px;
            padding: 10px;
            background-image: url('/img/pattern.png');
            /*background-color: url('/img/pattern.png'); "rgba(183, 179, 177, 0.3)";white;*/
        }

        /* Full-width textarea */
        .form-container textarea {
            width: 100%;
            padding: 15px;
            margin: 5px 0 22px 0;
            border: none;
            background: #f1f1f1;
            resize: none;
            min-height: 200px;
        }

        /* When the textarea gets focus, do something */
        .form-container textarea:focus {
            background-color: #ddd;
            outline: none;
        }

        /* Set a style for the submit/send button */
        .form-container .btn {
            background-color: rgba(58,169,224,255);/*#4CAF50;*/
            color: white;
            padding: 16px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
            margin-bottom:10px;
            opacity: 0.8;
        }

        /* Add a red background color to the cancel button */
        .form-container .cancel {
            background-color: rgba(230,22,78,255);/*red;*/
        }

        /* Add some hover effects to buttons */
        .form-container .btn:hover, .open-button:hover {
            opacity: 1;
        }

        .blink {
            animation: blink 2s steps(5, start) infinite;
            -webkit-animation: blink 1s steps(5, start) infinite;
        }
        @keyframes blink {
            to {
                visibility: hidden;
            }
        }
        @-webkit-keyframes blink {
            to {
                visibility: hidden;
            }
        }

    </style>
{% endblock %}

{% block pageTitle %}
    <h4 class="page-title mb-2"><i class="mdi mdi-chart-areaspline mr-2"></i>{{smartMod.modName}} Historical <strong>graphs</h4> 
{% endblock %}  
{% set isGrid = 0 %}
    
{% block body %}  
    {% set isGrid = 3 %}
    {% for label, messages in app.flashes %}
        <div class="container mt-2"> 
            <div class="alert-{{label}}"> 
                {% for message in messages %}
                    <p>{{ message | raw }}</p>
                {% endfor %}
            </div>
        </div>

    {% endfor %}   

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">     
                    <div class="row mt-0 header-title">
                        <div class="col-10">
                            <h4><strong>Fuel </strong>Supply</h4>
                        </div>
                        <div class="col-2">
                            <a href="#" onclick="openForm()" class="btn btn-primary btn-sm ml-5" data-toggle="tooltip" data-placement="top" title="Add a new Supply">
                                <i class="fas fa-plus-circle"></i>
                            </a>
                        </div>
                    </div>       
                    <div class="chat-popup" id="myForm">
                        <div class="form-container">
                            <h5 class="text-center mb-3">Add a new Fuel Supply ?</h5>
                            
                            {{ form_start(form) }}
                            <div class="row mb-2 px-3">
                                {{form_widget(form.addAt)}}
                            
                            </div>
                            <div class="row mb-2 px-3">
                                {{ form_widget(form.quantity, { 'type':'number' }) }}
                            
                            </div>

                            <!--<button type = "submit" class="btn btn-primary">Cr√©er le nouveau Site</button>-->
                            <button type="submit" class="btn">Add !</button>
                            <button type="button" class="btn cancel" onclick="closeForm()">Cancel</button>
                            {{ form_end(form) }}
                            
                        </div>
                    </div>
                    <canvas id="CourbeAppro" height="300"></canvas>            
                </div><!--end card-body-->
            </div><!--end card-->

        </div> <!-- end col -->
    </div> 

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">            
                    <h4 class="mt-0 header-title">Evolution of Fuel <strong>Stocks</strong></h4>
                    <canvas id="CourbeStock" height="300"></canvas>            
                </div><!--end card-body-->
            </div><!--end card-->
        </div> <!-- end col -->
    </div> 


    <script>
        var isGrid = {{ isGrid }};
        console.log(isGrid);         
    </script>
                    
{% endblock %}

{% block datetimeFormat %}format: 'DD/MM/YYYY',{% endblock %}

{% block javascripts %}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/javascript.util/0.12.12/javascript.util.min.js" integrity="sha256-eiohPQlDytO6qQO+k+xX6LyVgfXcTzlPCy9t/VjceYo=" crossorigin="anonymous"></script>
    
    <!-- Chart JS -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" integrity="sha256-R4pqcOYV8lt7snxMQO/HSbVCFRPMdrhAFMH+vr9giYI=" crossorigin="anonymous"></script>
    <!-- <script src="/plugins/chartjs/chart.min.js"></script> -->
    <!-- <script src="/pages/jquery.chartjs.init.js"></script>
    -->
    <script>
        // Line chart
        var CourbeAppro_Linechart;
        var CourbeStock_Linechart;
        
    </script>

    <script src="/js/jquery.chartjs.update.js"></script>

    <script>
        function openForm() {
            document.getElementById("myForm").style.display = "block";
        }

        function closeForm() {
            document.getElementById("myForm").style.display = "none";
        }

        function blinkAlert(blink) {
            var a = $("#alertAppro");
            if(blink){
                var str = "<span class=\"badge badge-danger mr-3 mt-2 blink\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Alerte ravitaillement\"><i class=\"far fa-bell\"></i></span>";
                a.html(str);
            }
            else a.html('');
        }
        
        function removeData(chart) {
            chart.data.labels.pop();
            chart.data.datasets.forEach((dataset) => {
                dataset.data.pop();
            });
            chart.update();
        }

        
        function addData(chart, label, data) {
            chart.data.labels.push(label);
            chart.data.datasets.forEach((dataset) => {
                dataset.data.push(data);
            });
            chart.update();
        }

        var $urlUpdateFuelModHistographs = "{{ path('update_fuelMod_histographs', {'id': smartMod.id}) }}";
        function displayNewData(chart, label, data, dateopt, multiple, xscale, id){
            chart.data.labels = [];
            chart.data.datasets.forEach( (dataset) => {
                dataset.data = [];
            });
            chart.data.labels = label;
            if(multiple > 1){
                var i = 0;
                chart.data.datasets.forEach((dataset) => {
                    if( i < multiple) dataset.data = data[i++];
                });
            }
            else if(multiple == 1){
                /*chart.data.datasets.forEach((dataset) => {
                    dataset.data = data;
                });*/
                chart.data.datasets[0].data = data;
            }
            if(xscale === 'day') chart.options.scales.xAxes[0].scaleLabel.labelString = moment(dateopt).format('DD MMMM').toString();
            else if( xscale === 'month') chart.options.scales.xAxes[0].scaleLabel.labelString = moment(dateopt).format('MMMM').toString();
            //console.log(chart.options.scales.xAxes[0].scaleLabel.labelString);
            //preloaderChart(id, false);
            chart.update();
        }

        //console.log(CourbedeCharge);

        $("#datetimepicker10").on("dp.change", function (e) {
            var $dat = new moment(e.date._d);
            $dat = $dat.format("YYYY-MM-DD").toString();
            console.log($dat);
            $date = '%' + $dat + '%';
            //console.log($date);
            var currentDate = new moment(new Date());
            currentDate = currentDate.format("YYYY-MM-DD");
            console.log( currentDate);

            $.ajax({
                type: "POST",/*method type*/
                contentType: "application/json; charset=utf-8",
                url: $urlUpdateFuelModHistographs,/*Target function that will be return result*/
                data: JSON.stringify({
                        "selectedDate": $date
                    }),/*parameter pass data is parameter name param is value */ 
                dataType: "json",
                success: function (data) {
                    //alert("Success");
                    //console.log(data);
                    console.log( Object.values( data['CourbeStock']['stock'] ).pop() );
                    var lastFuelStock = Object.values( data['CourbeStock']['stock'] ).pop();
                    //console.log(Object.values(result['IDD']));
                    {% if smartMod.modType == 'FUEL' %}
                        displayNewData(CourbeAppro_Linechart, Object.values(data['CourbeAppro']['date']), Object.values(data['CourbeAppro']['appro']), e.date._d, 1, 'day');
                        displayNewData(CourbeStock_Linechart, Object.values(data['CourbeStock']['date']), Object.values(data['CourbeStock']['stock']), e.date._d, 1, 'day');
                        
                    {% endif %}

                    if( $dat == currentDate ) {
                        var seuil = {{ critiqFuelStock }};
                        console.log('seuil = ' + seuil);
                        if( lastFuelStock < seuil){
                            blinkAlert(true);
                        }
                        
                    }
                    else{
                        blinkAlert(false);
                        console.log('not blinkking');
                    }

                },
                error: function (result) {
                    //alert("Error");
                    console.log(result);
                }
            });
            
        });
        
        //setInterval(function(){ updateChart()},5000);

    </script>
{% endblock %}